{"version":3,"sources":["components/DialogModal/DialogModal.jsx","components/DisplayTodo/DisplayTodo.jsx","components/Header/Header.jsx","components/TodoActions/TodoActions.jsx","components/TodoRender/TodoRender.jsx","App.js","index.js"],"names":["DialogModal","isOpen","handleOpenDialog","formData","handleSetFieldValue","handleSetTodoOnSubmit","Dialog","open","onClose","className","isEdit","onSubmit","TextField","label","variant","onChange","e","target","value","todoName","todoNote","multiline","minRows","Button","color","onClick","disabled","type","DisplayTodo","handleCloseButton","handleEditTodo","handleRemoveTodo","Header","isOpenDisplayTodo","totalCount","weekDay","moment","format","date","finished","total","TodoActions","tab","handleChangeTab","Tabs","tabValue","indicatorColor","textColor","Tab","Todo","todo","index","handleMarkTodo","handleOpenTodo","isFinishedTodo","isFinished","Checkbox","icon","checkedIcon","checked","fontSize","TodoRender","todos","map","id","initialFormData","App","useState","setTab","setIsOpen","setIsOpenDisplayTodo","setTodos","setFormData","reduce","acc","curr","length","getIsFinishedTodosCount","sortedTodos","filter","setFilterTab","resetAll","prevState","fieldName","preventDefault","editedTodos","splice","uuidv4","item","isChecked","updateTodos","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3052db9f.chunk.js","sourcesContent":["import Dialog from '@material-ui/core/Dialog'\r\nimport Button from '@material-ui/core/Button'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\r\nimport MuiDialogContent from '@material-ui/core/DialogContent'\r\nimport MuiDialogActions from '@material-ui/core/DialogActions'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nimport './DialogModal.scss';\r\n\r\nconst DialogModal = ({\r\n  isOpen,\r\n  handleOpenDialog,\r\n  formData,\r\n  handleSetFieldValue,\r\n  handleSetTodoOnSubmit\r\n}) => {\r\n  return (\r\n    <Dialog open={isOpen} onClose={handleOpenDialog}>\r\n      <MuiDialogTitle className='dialog-title'>{formData.isEdit ? 'Edit Todo' : 'Add new Todo'}</MuiDialogTitle>\r\n      <MuiDialogContent>\r\n        <form onSubmit={handleSetTodoOnSubmit}>\r\n          <TextField\r\n            label='Todo'\r\n            variant='outlined'\r\n            onChange={(e) => handleSetFieldValue('todoName', e.target.value)}\r\n            value={formData.todoName}\r\n          />\r\n          <TextField\r\n            label='Note'\r\n            variant='outlined'\r\n            onChange={(e) => handleSetFieldValue('todoNote', e.target.value)}\r\n            value={formData.todoNote}\r\n            multiline\r\n            minRows={4}\r\n          />\r\n          <MuiDialogActions>\r\n            <Button color='primary' onClick={handleOpenDialog}>\r\n              Close\r\n            </Button>\r\n            <Button disabled={!formData.todoName} type='submit' color='primary'>\r\n            {formData.isEdit ? 'Edit' : 'Add'}\r\n            </Button>\r\n          </MuiDialogActions>\r\n        </form>\r\n      </MuiDialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default DialogModal","import Dialog from '@material-ui/core/Dialog'\r\nimport Button from '@material-ui/core/Button'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\r\nimport MuiDialogContent from '@material-ui/core/DialogContent'\r\nimport MuiDialogActions from '@material-ui/core/DialogActions'\r\n\r\nimport './DisplayTodo.scss'\r\n\r\nconst DisplayTodo = ({\r\n  isOpen,\r\n  formData,\r\n  handleCloseButton,\r\n  handleEditTodo,\r\n  handleRemoveTodo\r\n}) => {\r\n  return (\r\n    <Dialog onClose={handleCloseButton} open={isOpen}>\r\n      <MuiDialogTitle>\r\n        <div className=\"display-title\">Your Todo</div>\r\n      </MuiDialogTitle>\r\n      <MuiDialogContent>\r\n        <div>\r\n          <h2>{formData.todoName}</h2>\r\n          <div>{formData.todoNote}</div>\r\n        </div>\r\n      </MuiDialogContent>\r\n      <MuiDialogActions>\r\n        <div className=\"display-buttons-wrapper\">\r\n          <Button color=\"secondary\" variant=\"outlined\" onClick={handleRemoveTodo}>Remove</Button>\r\n          <div>\r\n            <Button color=\"primary\" onClick={handleCloseButton}>Close</Button>\r\n            <Button color=\"primary\" onClick={handleEditTodo}>Edit</Button>\r\n          </div>\r\n        </div>\r\n      </MuiDialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default DisplayTodo","import moment from \"moment\"\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport './Header.scss'\r\nimport DialogModal from \"../DialogModal/DialogModal\";\r\nimport DisplayTodo from \"../DisplayTodo/DisplayTodo\";\r\n\r\nconst Header = ({\r\n  isOpen,\r\n  handleOpenDialog,\r\n  formData,\r\n  handleSetFieldValue,\r\n  handleSetTodoOnSubmit,\r\n  isOpenDisplayTodo,\r\n  handleCloseButton,\r\n  handleEditTodo,\r\n  handleRemoveTodo,\r\n  totalCount\r\n}) => {\r\n\r\n  const weekDay = moment().format('dddd')\r\n  const date = moment().date()\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__inner\">\r\n        <div className=\"header__count\">\r\n          <span className=\"header__count-finished\">{totalCount.finished}</span>\r\n          <div className=\"header__count-total\">\r\n            <span>Tasks</span>\r\n            <span>{`/ ${totalCount.total}`}</span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <span className=\"header__week-day\">{weekDay}</span>\r\n          <span className=\"header__date\">{date}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"header__add-todo\" onClick={handleOpenDialog}>\r\n        <AddCircleIcon color=\"primary\" />\r\n        <span></span>\r\n      </div>\r\n      <DialogModal\r\n        isOpen={isOpen}\r\n        handleOpenDialog={handleOpenDialog}\r\n        formData={formData}\r\n        handleSetFieldValue={handleSetFieldValue}\r\n        handleSetTodoOnSubmit={handleSetTodoOnSubmit}\r\n      />\r\n      <DisplayTodo\r\n        formData={formData}\r\n        isOpen={isOpenDisplayTodo}\r\n        handleCloseButton={handleCloseButton}\r\n        handleEditTodo={handleEditTodo}\r\n        handleRemoveTodo={handleRemoveTodo}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import ListIcon from '@material-ui/icons/List'\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\n\r\nimport './TodoActions.scss'\r\n\r\nconst TodoActions = ({\r\n  tab,\r\n  handleChangeTab\r\n}) => {\r\n\r\n  return(\r\n    <div className='actions'>\r\n      <Tabs\r\n        value={tab}\r\n        onChange={(e, tabValue) => handleChangeTab(tabValue)}\r\n        indicatorColor='primary'\r\n        textColor='primary'\r\n      >    \r\n        <Tab label={<ListIcon/>}></Tab>\r\n        <Tab label={<RadioButtonUncheckedIcon/>}></Tab>\r\n        <Tab label={<CheckIcon/>}></Tab>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoActions","import ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos'\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nimport './TodoRender.scss'\r\n\r\nconst Todo = ({\r\n  todo,\r\n  index,\r\n  handleMarkTodo,\r\n  handleOpenTodo\r\n}) => {\r\n  const isFinishedTodo = todo.isFinished ? 'todo__item-finished' : ''\r\n  return (\r\n    <div className='todo__item'>\r\n      <span>\r\n        <Checkbox\r\n          icon={<RadioButtonUncheckedIcon />}\r\n          checkedIcon={<CheckCircleOutlineIcon color=\"primary\" />}\r\n          onClick={(e) => handleMarkTodo(e.target.checked, index)}\r\n          checked={todo.isFinished}\r\n        />\r\n      </span>\r\n      <div className='todo__item-title' onClick={() => handleOpenTodo({ ...todo, index })}>\r\n        <span className={isFinishedTodo}>{todo.todoName}</span>\r\n        <ArrowForwardIosIcon fontSize='small' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TodoRender = ({\r\n  todos,\r\n  handleMarkTodo,\r\n  handleOpenTodo\r\n}) => {\r\n\r\n  return (\r\n    <div className='todo__list'>\r\n      {todos.map((todo, index) => (\r\n        <Todo\r\n          key={todo.id}\r\n          todo={todo}\r\n          index={index}\r\n          handleMarkTodo={handleMarkTodo}\r\n          handleOpenTodo={handleOpenTodo}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoRender","import {useState} from 'react'\r\nimport Header from './components/Header/Header'\r\nimport TodoActions from './components/TodoActions/TodoActions'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport TodoRender from './components/TodoRender/TodoRender'\r\n\r\nimport './App.scss'\r\n\r\nconst initialFormData = {\r\n  isEdit: false,\r\n  todoName: '',\r\n  todoNote: '',\r\n  isFinished: false,\r\n  id: '',\r\n  index: null\r\n}\r\n\r\nconst getIsFinishedTodosCount = (todos) => todos.reduce((acc, curr) => {\r\n  acc.total = todos.length\r\n\r\n  if (curr.isFinished) {\r\n    acc.finished = acc.finished + 1\r\n  }\r\n\r\n  return acc\r\n\r\n}, { total: 0, finished: 0 })\r\n\r\nconst setFilterTab = (tab, todos) => {\r\n  if (tab === 0) {\r\n    return todos;\r\n  } else if (tab === 1) {\r\n    return todos.filter((todo) => !todo.isFinished)\r\n  } else if (tab === 2) {\r\n    return todos.filter((todo) => todo.isFinished)\r\n  }\r\n}\r\n\r\nfunction App() {\r\n\r\n  const [tab, setTab] = useState(0)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [isOpenDisplayTodo, setIsOpenDisplayTodo] = useState(false)\r\n  const [todos, setTodos] = useState([])\r\n  const [formData, setFormData] = useState(initialFormData)\r\n\r\n  const totalCount = getIsFinishedTodosCount(todos)\r\n\r\n  const sortedTodos = setFilterTab(tab, todos)\r\n\r\n  const resetAll = () => {\r\n    setIsOpen(false)\r\n    setIsOpenDisplayTodo(false)\r\n    setFormData(initialFormData)\r\n  }\r\n\r\n  const handleOpenDialog = () => setIsOpen((prevState) => !prevState)\r\n\r\n  const handleChangeTab = (tabValue) => setTab(tabValue)\r\n\r\n  const handleSetFieldValue = (fieldName, value) => setFormData((prevState) => ({ ...prevState, [fieldName]: value }))\r\n\r\n  const handleSetTodoOnSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (formData.isEdit) {\r\n      const editedTodos = todos\r\n      editedTodos.splice(formData.index, 1, { ...formData, isEdit: false, index: null })\r\n      setTodos(editedTodos)\r\n    } else {\r\n      setTodos((prevState) => [...prevState, { ...formData, id: uuidv4()}])\r\n    }\r\n\r\n    resetAll()\r\n  }\r\n\r\n  const handleMarkTodo = (isChecked, index) => {\r\n    const updateTodos = todos.slice()\r\n    updateTodos.splice(index, 1, { ...todos[index], isFinished: isChecked })\r\n    setTodos(updateTodos)\r\n  }\r\n\r\n  const handleOpenTodo = (todo) => {\r\n    setIsOpenDisplayTodo(true)\r\n    setFormData(todo)\r\n  }\r\n\r\n  const handleEditTodo = () => {\r\n    setFormData((prevState) => ({ ...prevState, isEdit: true }))\r\n    setIsOpenDisplayTodo(false)\r\n    handleOpenDialog()\r\n  }\r\n\r\n  const handleRemoveTodo = () => {\r\n    setTodos(todos.filter((item) => item.id !== formData.id))\r\n    resetAll()\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <Header\r\n        isOpen={isOpen}\r\n        handleOpenDialog={handleOpenDialog}\r\n        formData={formData}\r\n        handleSetFieldValue={handleSetFieldValue}\r\n        handleSetTodoOnSubmit={handleSetTodoOnSubmit}\r\n        handleEditTodo={handleEditTodo}\r\n        isOpenDisplayTodo={isOpenDisplayTodo}\r\n        handleRemoveTodo={handleRemoveTodo}\r\n        handleCloseButton={resetAll}\r\n        totalCount={totalCount}\r\n      />\r\n      <TodoActions\r\n        tab={tab}\r\n        handleChangeTab={handleChangeTab}\r\n      />\r\n      <TodoRender\r\n        todos={sortedTodos}\r\n        handleMarkTodo={handleMarkTodo}\r\n        handleOpenTodo={handleOpenTodo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nimport './index.scss'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}